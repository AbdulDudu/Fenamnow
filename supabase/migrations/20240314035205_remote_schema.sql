create extension if not exists "fuzzystrmatch" with schema "extensions";

create extension if not exists "hstore" with schema "extensions";

create extension if not exists "http" with schema "extensions";

create extension if not exists "pg_cron" with schema "extensions";

create extension if not exists "pg_jsonschema" with schema "extensions";

create extension if not exists "postgis" with schema "extensions";

create extension if not exists "tablefunc" with schema "extensions";

create extension if not exists "timescaledb" with schema "extensions";

create extension if not exists "vector" with schema "extensions";

create extension if not exists "wrappers" with schema "extensions";


create type "public"."listing_type" as enum ('rental', 'sale', 'lease');

create type "public"."message_type" as enum ('text', 'image', 'video', 'audio', 'location', 'document', 'file');

create type "public"."profile_type" as enum ('user', 'agent', 'admin', 'agency');

create type "public"."property_status" as enum ('available', 'unavailable');

create table "public"."agent_applications" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid default auth.uid(),
    "status" text not null default 'pending'::text,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone default now(),
    "veriff_id" text not null default ''::text,
    "url" text not null default ''::text,
    "rejection_reason" text
);


alter table "public"."agent_applications" enable row level security;

create table "public"."amenities" (
    "id" bigint generated by default as identity not null,
    "name" text not null default ''::text,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."amenities" enable row level security;

create table "public"."blocked_users" (
    "id" uuid not null default gen_random_uuid(),
    "user_id" uuid not null,
    "blocked_id" uuid not null,
    "created_at" timestamp with time zone not null default now()
);


create table "public"."chats" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid,
    "receiver_id" uuid
);


alter table "public"."chats" enable row level security;

create table "public"."cities" (
    "id" uuid not null default gen_random_uuid(),
    "name" text not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."cities" enable row level security;

create table "public"."communities" (
    "id" uuid not null default gen_random_uuid(),
    "name" text not null,
    "created_at" timestamp with time zone not null default now(),
    "city" uuid not null
);


alter table "public"."communities" enable row level security;

create table "public"."favourites" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "property_id" bigint not null
);


alter table "public"."favourites" enable row level security;

create table "public"."lease_durations" (
    "id" uuid not null default gen_random_uuid(),
    "name" text not null default ''::text,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."lease_durations" enable row level security;

create table "public"."listing_types" (
    "id" uuid not null default gen_random_uuid(),
    "name" text not null default ''::text,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."listing_types" enable row level security;

create table "public"."message_approvals" (
    "id" uuid not null default gen_random_uuid(),
    "chat_id" uuid,
    "approver_id" uuid,
    "approved" boolean,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."message_approvals" enable row level security;

create table "public"."messages" (
    "id" uuid not null default gen_random_uuid(),
    "chat_id" uuid,
    "sender_id" uuid,
    "content" text not null,
    "content_type" message_type,
    "is_edited" boolean not null,
    "deleted_at" timestamp with time zone,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone,
    "seen" timestamp with time zone
);


alter table "public"."messages" enable row level security;

create table "public"."notifications" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid not null,
    "body" text,
    "title" text not null default ''::text,
    "image" text,
    "url" text not null default ''::text
);


alter table "public"."notifications" enable row level security;

create table "public"."profiles" (
    "id" uuid not null,
    "updated_at" timestamp with time zone,
    "display_name" text,
    "full_name" text,
    "email" text,
    "avatar_url" text,
    "website" text,
    "type" profile_type not null default 'user'::profile_type,
    "fcm_token" text
);


alter table "public"."profiles" enable row level security;

create table "public"."properties" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "city" text not null,
    "community" text not null,
    "description" text not null,
    "price" real not null,
    "deposit" real,
    "updated_at" timestamp with time zone default now(),
    "user_id" uuid not null,
    "property_type" text not null,
    "lease_duration" text,
    "address" text not null default ''::text,
    "amenities" jsonb[],
    "bedrooms" smallint not null default '0'::smallint,
    "bathrooms" smallint not null default '0'::smallint,
    "date_available" timestamp with time zone not null,
    "furnished" boolean,
    "lot_size" real,
    "property_size" real,
    "negotiable" boolean not null default true,
    "country" text not null default 'SL'::text,
    "latitude" double precision,
    "longitude" double precision,
    "map_address" text not null default ''::text,
    "listing_type" listing_type not null,
    "status" property_status not null,
    "video_tour" uuid,
    "images" jsonb[] not null,
    "reference_code" text not null
);


create table "public"."property_location" (
    "property_id" bigint not null,
    "street_address" text,
    "city" text,
    "state" text,
    "country" text
);


alter table "public"."property_location" enable row level security;

create table "public"."property_types" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "name" text not null default ''::text
);


alter table "public"."property_types" enable row level security;

create table "public"."property_views" (
    "id" uuid not null default gen_random_uuid(),
    "property_id" bigint not null,
    "viewer_id" uuid not null,
    "view_timestamp" timestamp with time zone not null default now()
);


alter table "public"."property_views" enable row level security;

create table "public"."user_chats" (
    "id" uuid not null default gen_random_uuid(),
    "chat_id" uuid not null,
    "user_id" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "blocked" boolean not null default false
);


alter table "public"."user_chats" enable row level security;

create table "public"."videos" (
    "id" uuid not null default gen_random_uuid(),
    "uri" text,
    "thumbnail_uri" text,
    "user_id" uuid,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."videos" enable row level security;

CREATE UNIQUE INDEX agent_applications_pkey ON public.agent_applications USING btree (id);

CREATE UNIQUE INDEX amenities_pkey ON public.amenities USING btree (id, name);

CREATE UNIQUE INDEX blocked_users_pkey ON public.blocked_users USING btree (id);

CREATE UNIQUE INDEX chats_pkey ON public.chats USING btree (id);

CREATE UNIQUE INDEX cities_name_key ON public.cities USING btree (name);

CREATE UNIQUE INDEX cities_pkey ON public.cities USING btree (id);

CREATE UNIQUE INDEX communities_name_key ON public.communities USING btree (name);

CREATE UNIQUE INDEX communities_pkey ON public.communities USING btree (id, city);

CREATE UNIQUE INDEX favourites_pkey ON public.favourites USING btree (id, user_id, property_id);

CREATE INDEX idx_country ON public.properties USING btree (country);

CREATE UNIQUE INDEX lease_duration_types_name_key ON public.lease_durations USING btree (name);

CREATE UNIQUE INDEX lease_duration_types_pkey ON public.lease_durations USING btree (id, name);

CREATE UNIQUE INDEX listing_types_name_key ON public.listing_types USING btree (name);

CREATE UNIQUE INDEX listing_types_pkey ON public.listing_types USING btree (id, name);

CREATE UNIQUE INDEX message_approvals_pkey ON public.message_approvals USING btree (id);

CREATE UNIQUE INDEX messages_pkey ON public.messages USING btree (id);

CREATE UNIQUE INDEX notifications_pkey ON public.notifications USING btree (id);

CREATE UNIQUE INDEX profiles_display_name_key ON public.profiles USING btree (display_name);

CREATE UNIQUE INDEX profiles_pkey ON public.profiles USING btree (id);

CREATE UNIQUE INDEX properties_address_key ON public.properties USING btree (address);

CREATE UNIQUE INDEX properties_pkey ON public.properties USING btree (id);

CREATE UNIQUE INDEX properties_reference_code_key ON public.properties USING btree (reference_code);

CREATE UNIQUE INDEX property_location_pkey ON public.property_location USING btree (property_id);

CREATE UNIQUE INDEX property_types_name_key ON public.property_types USING btree (name);

CREATE UNIQUE INDEX property_types_pkey ON public.property_types USING btree (id, name);

CREATE UNIQUE INDEX property_views_pkey ON public.property_views USING btree (id);

CREATE UNIQUE INDEX user_chats_pkey ON public.user_chats USING btree (id, chat_id);

CREATE UNIQUE INDEX videos_pkey ON public.videos USING btree (id);

alter table "public"."agent_applications" add constraint "agent_applications_pkey" PRIMARY KEY using index "agent_applications_pkey";

alter table "public"."amenities" add constraint "amenities_pkey" PRIMARY KEY using index "amenities_pkey";

alter table "public"."blocked_users" add constraint "blocked_users_pkey" PRIMARY KEY using index "blocked_users_pkey";

alter table "public"."chats" add constraint "chats_pkey" PRIMARY KEY using index "chats_pkey";

alter table "public"."cities" add constraint "cities_pkey" PRIMARY KEY using index "cities_pkey";

alter table "public"."communities" add constraint "communities_pkey" PRIMARY KEY using index "communities_pkey";

alter table "public"."favourites" add constraint "favourites_pkey" PRIMARY KEY using index "favourites_pkey";

alter table "public"."lease_durations" add constraint "lease_duration_types_pkey" PRIMARY KEY using index "lease_duration_types_pkey";

alter table "public"."listing_types" add constraint "listing_types_pkey" PRIMARY KEY using index "listing_types_pkey";

alter table "public"."message_approvals" add constraint "message_approvals_pkey" PRIMARY KEY using index "message_approvals_pkey";

alter table "public"."messages" add constraint "messages_pkey" PRIMARY KEY using index "messages_pkey";

alter table "public"."notifications" add constraint "notifications_pkey" PRIMARY KEY using index "notifications_pkey";

alter table "public"."profiles" add constraint "profiles_pkey" PRIMARY KEY using index "profiles_pkey";

alter table "public"."properties" add constraint "properties_pkey" PRIMARY KEY using index "properties_pkey";

alter table "public"."property_location" add constraint "property_location_pkey" PRIMARY KEY using index "property_location_pkey";

alter table "public"."property_types" add constraint "property_types_pkey" PRIMARY KEY using index "property_types_pkey";

alter table "public"."property_views" add constraint "property_views_pkey" PRIMARY KEY using index "property_views_pkey";

alter table "public"."user_chats" add constraint "user_chats_pkey" PRIMARY KEY using index "user_chats_pkey";

alter table "public"."videos" add constraint "videos_pkey" PRIMARY KEY using index "videos_pkey";

alter table "public"."agent_applications" add constraint "agent_applications_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) ON DELETE CASCADE not valid;

alter table "public"."agent_applications" validate constraint "agent_applications_user_id_fkey";

alter table "public"."blocked_users" add constraint "blocked_users_blocked_id_fkey" FOREIGN KEY (blocked_id) REFERENCES profiles(id) ON DELETE CASCADE not valid;

alter table "public"."blocked_users" validate constraint "blocked_users_blocked_id_fkey";

alter table "public"."blocked_users" add constraint "blocked_users_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) ON DELETE CASCADE not valid;

alter table "public"."blocked_users" validate constraint "blocked_users_user_id_fkey";

alter table "public"."chats" add constraint "chats_receiver_id_fkey" FOREIGN KEY (receiver_id) REFERENCES profiles(id) ON DELETE SET NULL not valid;

alter table "public"."chats" validate constraint "chats_receiver_id_fkey";

alter table "public"."chats" add constraint "chats_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) ON DELETE CASCADE not valid;

alter table "public"."chats" validate constraint "chats_user_id_fkey";

alter table "public"."cities" add constraint "cities_name_key" UNIQUE using index "cities_name_key";

alter table "public"."communities" add constraint "communities_name_key" UNIQUE using index "communities_name_key";

alter table "public"."communities" add constraint "public_communities_city_fkey" FOREIGN KEY (city) REFERENCES cities(id) ON DELETE CASCADE not valid;

alter table "public"."communities" validate constraint "public_communities_city_fkey";

alter table "public"."favourites" add constraint "favourites_property_id_fkey" FOREIGN KEY (property_id) REFERENCES properties(id) ON DELETE CASCADE not valid;

alter table "public"."favourites" validate constraint "favourites_property_id_fkey";

alter table "public"."favourites" add constraint "favourites_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) ON DELETE CASCADE not valid;

alter table "public"."favourites" validate constraint "favourites_user_id_fkey";

alter table "public"."lease_durations" add constraint "lease_duration_types_name_key" UNIQUE using index "lease_duration_types_name_key";

alter table "public"."listing_types" add constraint "listing_types_name_key" UNIQUE using index "listing_types_name_key";

alter table "public"."message_approvals" add constraint "message_approvals_approver_id_fkey" FOREIGN KEY (approver_id) REFERENCES profiles(id) ON DELETE CASCADE not valid;

alter table "public"."message_approvals" validate constraint "message_approvals_approver_id_fkey";

alter table "public"."message_approvals" add constraint "message_approvals_chat_id_fkey" FOREIGN KEY (chat_id) REFERENCES chats(id) ON DELETE CASCADE not valid;

alter table "public"."message_approvals" validate constraint "message_approvals_chat_id_fkey";

alter table "public"."messages" add constraint "messages_chat_id_fkey" FOREIGN KEY (chat_id) REFERENCES chats(id) ON DELETE CASCADE not valid;

alter table "public"."messages" validate constraint "messages_chat_id_fkey";

alter table "public"."messages" add constraint "messages_sender_id_fkey" FOREIGN KEY (sender_id) REFERENCES profiles(id) ON DELETE CASCADE not valid;

alter table "public"."messages" validate constraint "messages_sender_id_fkey";

alter table "public"."notifications" add constraint "notifications_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."notifications" validate constraint "notifications_user_id_fkey";

alter table "public"."profiles" add constraint "display_name_length" CHECK ((char_length(display_name) >= 3)) not valid;

alter table "public"."profiles" validate constraint "display_name_length";

alter table "public"."profiles" add constraint "profiles_display_name_key" UNIQUE using index "profiles_display_name_key";

alter table "public"."profiles" add constraint "profiles_id_fkey" FOREIGN KEY (id) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."profiles" validate constraint "profiles_id_fkey";

alter table "public"."properties" add constraint "properties_address_key" UNIQUE using index "properties_address_key";

alter table "public"."properties" add constraint "properties_lease_duration_fkey" FOREIGN KEY (lease_duration) REFERENCES lease_durations(name) ON DELETE CASCADE not valid;

alter table "public"."properties" validate constraint "properties_lease_duration_fkey";

alter table "public"."properties" add constraint "properties_property_type_fkey" FOREIGN KEY (property_type) REFERENCES property_types(name) ON DELETE CASCADE not valid;

alter table "public"."properties" validate constraint "properties_property_type_fkey";

alter table "public"."properties" add constraint "properties_reference_code_key" UNIQUE using index "properties_reference_code_key";

alter table "public"."properties" add constraint "properties_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) ON DELETE CASCADE not valid;

alter table "public"."properties" validate constraint "properties_user_id_fkey";

alter table "public"."properties" add constraint "properties_video_tour_fkey" FOREIGN KEY (video_tour) REFERENCES videos(id) ON DELETE CASCADE not valid;

alter table "public"."properties" validate constraint "properties_video_tour_fkey";

alter table "public"."property_location" add constraint "property_location_property_id_fkey" FOREIGN KEY (property_id) REFERENCES properties(id) not valid;

alter table "public"."property_location" validate constraint "property_location_property_id_fkey";

alter table "public"."property_types" add constraint "property_types_name_key" UNIQUE using index "property_types_name_key";

alter table "public"."property_views" add constraint "property_views_property_id_fkey" FOREIGN KEY (property_id) REFERENCES properties(id) ON DELETE CASCADE not valid;

alter table "public"."property_views" validate constraint "property_views_property_id_fkey";

alter table "public"."property_views" add constraint "property_views_viewer_id_fkey" FOREIGN KEY (viewer_id) REFERENCES profiles(id) ON DELETE CASCADE not valid;

alter table "public"."property_views" validate constraint "property_views_viewer_id_fkey";

alter table "public"."user_chats" add constraint "user_chats_chat_id_fkey" FOREIGN KEY (chat_id) REFERENCES chats(id) ON DELETE CASCADE not valid;

alter table "public"."user_chats" validate constraint "user_chats_chat_id_fkey";

alter table "public"."user_chats" add constraint "user_chats_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) ON DELETE CASCADE not valid;

alter table "public"."user_chats" validate constraint "user_chats_user_id_fkey";

alter table "public"."videos" add constraint "videos_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) ON DELETE CASCADE not valid;

alter table "public"."videos" validate constraint "videos_user_id_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.ddlx_get_dependants(oid, OUT depth integer, OUT classid regclass, OUT objid oid)
 RETURNS SETOF record
 LANGUAGE sql
AS $function$
with recursive 
  tree(depth,classid,objid,objsubid,refclassid,refobjid,refobjsubid,deptype,edges) 
as (
select 1,
       case when r.oid is not null then 'pg_class'::regclass 
            else d.classid::regclass 
       end as classid,
       coalesce(r.ev_class,d.objid) as objid,
       d.objsubid, d.refclassid, d.refobjid,d.refobjsubid, d.deptype,
       array[array[d.refobjid::int,d.objid::int]]
  from pg_depend d
  left join pg_rewrite r on 
       (r.oid = d.objid and r.ev_type = '1' and r.rulename = '_RETURN')
 where d.refobjid = $1 and r.ev_class is distinct from d.refobjid
 union all
select depth+1,
       case when r.oid is not null then 'pg_class'::regclass 
            else d.classid::regclass 
       end as classid,
       coalesce(r.ev_class,d.objid) as objid,
       d.objsubid, d.refclassid, d.refobjid, d.refobjsubid, d.deptype,
       t.edges || array[array[d.refobjid::int,d.objid::int]]
  from tree t
  join pg_depend d on (d.refobjid=t.objid) 
  left join pg_rewrite r on 
       (r.oid = d.objid and r.ev_type = '1' and r.rulename = '_RETURN')
 where r.ev_class is distinct from d.refobjid
   and not ( t.edges @> array[array[d.refobjid::int,d.objid::int]] )
),
ddlx_get_dependants_recursive as (
select distinct 
       depth,
       classid,objid,objsubid,
       refclassid,refobjid,refobjsubid,
       deptype
  from tree
),
q as (
  select distinct depth,classid,objid
    from ddlx_get_dependants_recursive
   where deptype = 'n'
)
select depth,classid,objid 
  from q 
 where (objid,depth) in (select objid,max(depth) from q group by objid)
 order by depth,objid
$function$
;

CREATE OR REPLACE FUNCTION public.handle_new_user()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$
begin
  insert into public.profiles (id, email, full_name, avatar_url)
  values (new.id, new.email, new.raw_user_meta_data->>'full_name', new.raw_user_meta_data->>'avatar_url');
  return new;
end;
$function$
;

create or replace view "public"."property_daily_view_count" as  SELECT property_views.property_id,
    date_trunc('1 day'::text, property_views.view_timestamp) AS day_start,
    count(*) AS daily_view_count
   FROM property_views
  GROUP BY property_views.property_id, (date_trunc('1 day'::text, property_views.view_timestamp));


create or replace view "public"."property_hourly_view_count" as  SELECT property_views.property_id,
    date_trunc('hour'::text, property_views.view_timestamp) AS hour_start,
    count(*) AS hourly_view_count
   FROM property_views
  GROUP BY property_views.property_id, (date_trunc('hour'::text, property_views.view_timestamp));


create or replace view "public"."property_monthly_view_count" as  SELECT property_views.property_id,
    date_trunc('1 month'::text, property_views.view_timestamp) AS month_start,
    count(*) AS monthly_view_count
   FROM property_views
  GROUP BY property_views.property_id, (date_trunc('1 month'::text, property_views.view_timestamp));


create or replace view "public"."property_weekly_view_count" as  SELECT property_views.property_id,
    date_trunc('1 week'::text, property_views.view_timestamp) AS week_start,
    count(*) AS weekly_view_count
   FROM property_views
  GROUP BY property_views.property_id, (date_trunc('1 week'::text, property_views.view_timestamp));


create or replace view "public"."property_yearly_view_count" as  SELECT property_views.property_id,
    date_trunc('1 year'::text, property_views.view_timestamp) AS year_start,
    count(*) AS yearly_view_count
   FROM property_views
  GROUP BY property_views.property_id, (date_trunc('1 year'::text, property_views.view_timestamp));


grant delete on table "public"."agent_applications" to "anon";

grant insert on table "public"."agent_applications" to "anon";

grant references on table "public"."agent_applications" to "anon";

grant select on table "public"."agent_applications" to "anon";

grant trigger on table "public"."agent_applications" to "anon";

grant truncate on table "public"."agent_applications" to "anon";

grant update on table "public"."agent_applications" to "anon";

grant delete on table "public"."agent_applications" to "authenticated";

grant insert on table "public"."agent_applications" to "authenticated";

grant references on table "public"."agent_applications" to "authenticated";

grant select on table "public"."agent_applications" to "authenticated";

grant trigger on table "public"."agent_applications" to "authenticated";

grant truncate on table "public"."agent_applications" to "authenticated";

grant update on table "public"."agent_applications" to "authenticated";

grant delete on table "public"."agent_applications" to "service_role";

grant insert on table "public"."agent_applications" to "service_role";

grant references on table "public"."agent_applications" to "service_role";

grant select on table "public"."agent_applications" to "service_role";

grant trigger on table "public"."agent_applications" to "service_role";

grant truncate on table "public"."agent_applications" to "service_role";

grant update on table "public"."agent_applications" to "service_role";

grant delete on table "public"."amenities" to "anon";

grant insert on table "public"."amenities" to "anon";

grant references on table "public"."amenities" to "anon";

grant select on table "public"."amenities" to "anon";

grant trigger on table "public"."amenities" to "anon";

grant truncate on table "public"."amenities" to "anon";

grant update on table "public"."amenities" to "anon";

grant delete on table "public"."amenities" to "authenticated";

grant insert on table "public"."amenities" to "authenticated";

grant references on table "public"."amenities" to "authenticated";

grant select on table "public"."amenities" to "authenticated";

grant trigger on table "public"."amenities" to "authenticated";

grant truncate on table "public"."amenities" to "authenticated";

grant update on table "public"."amenities" to "authenticated";

grant delete on table "public"."amenities" to "service_role";

grant insert on table "public"."amenities" to "service_role";

grant references on table "public"."amenities" to "service_role";

grant select on table "public"."amenities" to "service_role";

grant trigger on table "public"."amenities" to "service_role";

grant truncate on table "public"."amenities" to "service_role";

grant update on table "public"."amenities" to "service_role";

grant delete on table "public"."blocked_users" to "anon";

grant insert on table "public"."blocked_users" to "anon";

grant references on table "public"."blocked_users" to "anon";

grant select on table "public"."blocked_users" to "anon";

grant trigger on table "public"."blocked_users" to "anon";

grant truncate on table "public"."blocked_users" to "anon";

grant update on table "public"."blocked_users" to "anon";

grant delete on table "public"."blocked_users" to "authenticated";

grant insert on table "public"."blocked_users" to "authenticated";

grant references on table "public"."blocked_users" to "authenticated";

grant select on table "public"."blocked_users" to "authenticated";

grant trigger on table "public"."blocked_users" to "authenticated";

grant truncate on table "public"."blocked_users" to "authenticated";

grant update on table "public"."blocked_users" to "authenticated";

grant delete on table "public"."blocked_users" to "service_role";

grant insert on table "public"."blocked_users" to "service_role";

grant references on table "public"."blocked_users" to "service_role";

grant select on table "public"."blocked_users" to "service_role";

grant trigger on table "public"."blocked_users" to "service_role";

grant truncate on table "public"."blocked_users" to "service_role";

grant update on table "public"."blocked_users" to "service_role";

grant delete on table "public"."chats" to "anon";

grant insert on table "public"."chats" to "anon";

grant references on table "public"."chats" to "anon";

grant select on table "public"."chats" to "anon";

grant trigger on table "public"."chats" to "anon";

grant truncate on table "public"."chats" to "anon";

grant update on table "public"."chats" to "anon";

grant delete on table "public"."chats" to "authenticated";

grant insert on table "public"."chats" to "authenticated";

grant references on table "public"."chats" to "authenticated";

grant select on table "public"."chats" to "authenticated";

grant trigger on table "public"."chats" to "authenticated";

grant truncate on table "public"."chats" to "authenticated";

grant update on table "public"."chats" to "authenticated";

grant delete on table "public"."chats" to "service_role";

grant insert on table "public"."chats" to "service_role";

grant references on table "public"."chats" to "service_role";

grant select on table "public"."chats" to "service_role";

grant trigger on table "public"."chats" to "service_role";

grant truncate on table "public"."chats" to "service_role";

grant update on table "public"."chats" to "service_role";

grant delete on table "public"."cities" to "anon";

grant insert on table "public"."cities" to "anon";

grant references on table "public"."cities" to "anon";

grant select on table "public"."cities" to "anon";

grant trigger on table "public"."cities" to "anon";

grant truncate on table "public"."cities" to "anon";

grant update on table "public"."cities" to "anon";

grant delete on table "public"."cities" to "authenticated";

grant insert on table "public"."cities" to "authenticated";

grant references on table "public"."cities" to "authenticated";

grant select on table "public"."cities" to "authenticated";

grant trigger on table "public"."cities" to "authenticated";

grant truncate on table "public"."cities" to "authenticated";

grant update on table "public"."cities" to "authenticated";

grant delete on table "public"."cities" to "service_role";

grant insert on table "public"."cities" to "service_role";

grant references on table "public"."cities" to "service_role";

grant select on table "public"."cities" to "service_role";

grant trigger on table "public"."cities" to "service_role";

grant truncate on table "public"."cities" to "service_role";

grant update on table "public"."cities" to "service_role";

grant delete on table "public"."communities" to "anon";

grant insert on table "public"."communities" to "anon";

grant references on table "public"."communities" to "anon";

grant select on table "public"."communities" to "anon";

grant trigger on table "public"."communities" to "anon";

grant truncate on table "public"."communities" to "anon";

grant update on table "public"."communities" to "anon";

grant delete on table "public"."communities" to "authenticated";

grant insert on table "public"."communities" to "authenticated";

grant references on table "public"."communities" to "authenticated";

grant select on table "public"."communities" to "authenticated";

grant trigger on table "public"."communities" to "authenticated";

grant truncate on table "public"."communities" to "authenticated";

grant update on table "public"."communities" to "authenticated";

grant delete on table "public"."communities" to "service_role";

grant insert on table "public"."communities" to "service_role";

grant references on table "public"."communities" to "service_role";

grant select on table "public"."communities" to "service_role";

grant trigger on table "public"."communities" to "service_role";

grant truncate on table "public"."communities" to "service_role";

grant update on table "public"."communities" to "service_role";

grant delete on table "public"."favourites" to "anon";

grant insert on table "public"."favourites" to "anon";

grant references on table "public"."favourites" to "anon";

grant select on table "public"."favourites" to "anon";

grant trigger on table "public"."favourites" to "anon";

grant truncate on table "public"."favourites" to "anon";

grant update on table "public"."favourites" to "anon";

grant delete on table "public"."favourites" to "authenticated";

grant insert on table "public"."favourites" to "authenticated";

grant references on table "public"."favourites" to "authenticated";

grant select on table "public"."favourites" to "authenticated";

grant trigger on table "public"."favourites" to "authenticated";

grant truncate on table "public"."favourites" to "authenticated";

grant update on table "public"."favourites" to "authenticated";

grant delete on table "public"."favourites" to "service_role";

grant insert on table "public"."favourites" to "service_role";

grant references on table "public"."favourites" to "service_role";

grant select on table "public"."favourites" to "service_role";

grant trigger on table "public"."favourites" to "service_role";

grant truncate on table "public"."favourites" to "service_role";

grant update on table "public"."favourites" to "service_role";

grant delete on table "public"."lease_durations" to "anon";

grant insert on table "public"."lease_durations" to "anon";

grant references on table "public"."lease_durations" to "anon";

grant select on table "public"."lease_durations" to "anon";

grant trigger on table "public"."lease_durations" to "anon";

grant truncate on table "public"."lease_durations" to "anon";

grant update on table "public"."lease_durations" to "anon";

grant delete on table "public"."lease_durations" to "authenticated";

grant insert on table "public"."lease_durations" to "authenticated";

grant references on table "public"."lease_durations" to "authenticated";

grant select on table "public"."lease_durations" to "authenticated";

grant trigger on table "public"."lease_durations" to "authenticated";

grant truncate on table "public"."lease_durations" to "authenticated";

grant update on table "public"."lease_durations" to "authenticated";

grant delete on table "public"."lease_durations" to "service_role";

grant insert on table "public"."lease_durations" to "service_role";

grant references on table "public"."lease_durations" to "service_role";

grant select on table "public"."lease_durations" to "service_role";

grant trigger on table "public"."lease_durations" to "service_role";

grant truncate on table "public"."lease_durations" to "service_role";

grant update on table "public"."lease_durations" to "service_role";

grant delete on table "public"."listing_types" to "anon";

grant insert on table "public"."listing_types" to "anon";

grant references on table "public"."listing_types" to "anon";

grant select on table "public"."listing_types" to "anon";

grant trigger on table "public"."listing_types" to "anon";

grant truncate on table "public"."listing_types" to "anon";

grant update on table "public"."listing_types" to "anon";

grant delete on table "public"."listing_types" to "authenticated";

grant insert on table "public"."listing_types" to "authenticated";

grant references on table "public"."listing_types" to "authenticated";

grant select on table "public"."listing_types" to "authenticated";

grant trigger on table "public"."listing_types" to "authenticated";

grant truncate on table "public"."listing_types" to "authenticated";

grant update on table "public"."listing_types" to "authenticated";

grant delete on table "public"."listing_types" to "service_role";

grant insert on table "public"."listing_types" to "service_role";

grant references on table "public"."listing_types" to "service_role";

grant select on table "public"."listing_types" to "service_role";

grant trigger on table "public"."listing_types" to "service_role";

grant truncate on table "public"."listing_types" to "service_role";

grant update on table "public"."listing_types" to "service_role";

grant delete on table "public"."message_approvals" to "anon";

grant insert on table "public"."message_approvals" to "anon";

grant references on table "public"."message_approvals" to "anon";

grant select on table "public"."message_approvals" to "anon";

grant trigger on table "public"."message_approvals" to "anon";

grant truncate on table "public"."message_approvals" to "anon";

grant update on table "public"."message_approvals" to "anon";

grant delete on table "public"."message_approvals" to "authenticated";

grant insert on table "public"."message_approvals" to "authenticated";

grant references on table "public"."message_approvals" to "authenticated";

grant select on table "public"."message_approvals" to "authenticated";

grant trigger on table "public"."message_approvals" to "authenticated";

grant truncate on table "public"."message_approvals" to "authenticated";

grant update on table "public"."message_approvals" to "authenticated";

grant delete on table "public"."message_approvals" to "service_role";

grant insert on table "public"."message_approvals" to "service_role";

grant references on table "public"."message_approvals" to "service_role";

grant select on table "public"."message_approvals" to "service_role";

grant trigger on table "public"."message_approvals" to "service_role";

grant truncate on table "public"."message_approvals" to "service_role";

grant update on table "public"."message_approvals" to "service_role";

grant delete on table "public"."messages" to "anon";

grant insert on table "public"."messages" to "anon";

grant references on table "public"."messages" to "anon";

grant select on table "public"."messages" to "anon";

grant trigger on table "public"."messages" to "anon";

grant truncate on table "public"."messages" to "anon";

grant update on table "public"."messages" to "anon";

grant delete on table "public"."messages" to "authenticated";

grant insert on table "public"."messages" to "authenticated";

grant references on table "public"."messages" to "authenticated";

grant select on table "public"."messages" to "authenticated";

grant trigger on table "public"."messages" to "authenticated";

grant truncate on table "public"."messages" to "authenticated";

grant update on table "public"."messages" to "authenticated";

grant delete on table "public"."messages" to "service_role";

grant insert on table "public"."messages" to "service_role";

grant references on table "public"."messages" to "service_role";

grant select on table "public"."messages" to "service_role";

grant trigger on table "public"."messages" to "service_role";

grant truncate on table "public"."messages" to "service_role";

grant update on table "public"."messages" to "service_role";

grant delete on table "public"."notifications" to "anon";

grant insert on table "public"."notifications" to "anon";

grant references on table "public"."notifications" to "anon";

grant select on table "public"."notifications" to "anon";

grant trigger on table "public"."notifications" to "anon";

grant truncate on table "public"."notifications" to "anon";

grant update on table "public"."notifications" to "anon";

grant delete on table "public"."notifications" to "authenticated";

grant insert on table "public"."notifications" to "authenticated";

grant references on table "public"."notifications" to "authenticated";

grant select on table "public"."notifications" to "authenticated";

grant trigger on table "public"."notifications" to "authenticated";

grant truncate on table "public"."notifications" to "authenticated";

grant update on table "public"."notifications" to "authenticated";

grant delete on table "public"."notifications" to "service_role";

grant insert on table "public"."notifications" to "service_role";

grant references on table "public"."notifications" to "service_role";

grant select on table "public"."notifications" to "service_role";

grant trigger on table "public"."notifications" to "service_role";

grant truncate on table "public"."notifications" to "service_role";

grant update on table "public"."notifications" to "service_role";

grant delete on table "public"."profiles" to "anon";

grant insert on table "public"."profiles" to "anon";

grant references on table "public"."profiles" to "anon";

grant select on table "public"."profiles" to "anon";

grant trigger on table "public"."profiles" to "anon";

grant truncate on table "public"."profiles" to "anon";

grant update on table "public"."profiles" to "anon";

grant delete on table "public"."profiles" to "authenticated";

grant insert on table "public"."profiles" to "authenticated";

grant references on table "public"."profiles" to "authenticated";

grant select on table "public"."profiles" to "authenticated";

grant trigger on table "public"."profiles" to "authenticated";

grant truncate on table "public"."profiles" to "authenticated";

grant update on table "public"."profiles" to "authenticated";

grant delete on table "public"."profiles" to "service_role";

grant insert on table "public"."profiles" to "service_role";

grant references on table "public"."profiles" to "service_role";

grant select on table "public"."profiles" to "service_role";

grant trigger on table "public"."profiles" to "service_role";

grant truncate on table "public"."profiles" to "service_role";

grant update on table "public"."profiles" to "service_role";

grant delete on table "public"."properties" to "anon";

grant insert on table "public"."properties" to "anon";

grant references on table "public"."properties" to "anon";

grant select on table "public"."properties" to "anon";

grant trigger on table "public"."properties" to "anon";

grant truncate on table "public"."properties" to "anon";

grant update on table "public"."properties" to "anon";

grant delete on table "public"."properties" to "authenticated";

grant insert on table "public"."properties" to "authenticated";

grant references on table "public"."properties" to "authenticated";

grant select on table "public"."properties" to "authenticated";

grant trigger on table "public"."properties" to "authenticated";

grant truncate on table "public"."properties" to "authenticated";

grant update on table "public"."properties" to "authenticated";

grant delete on table "public"."properties" to "service_role";

grant insert on table "public"."properties" to "service_role";

grant references on table "public"."properties" to "service_role";

grant select on table "public"."properties" to "service_role";

grant trigger on table "public"."properties" to "service_role";

grant truncate on table "public"."properties" to "service_role";

grant update on table "public"."properties" to "service_role";

grant delete on table "public"."property_location" to "anon";

grant insert on table "public"."property_location" to "anon";

grant references on table "public"."property_location" to "anon";

grant select on table "public"."property_location" to "anon";

grant trigger on table "public"."property_location" to "anon";

grant truncate on table "public"."property_location" to "anon";

grant update on table "public"."property_location" to "anon";

grant delete on table "public"."property_location" to "authenticated";

grant insert on table "public"."property_location" to "authenticated";

grant references on table "public"."property_location" to "authenticated";

grant select on table "public"."property_location" to "authenticated";

grant trigger on table "public"."property_location" to "authenticated";

grant truncate on table "public"."property_location" to "authenticated";

grant update on table "public"."property_location" to "authenticated";

grant delete on table "public"."property_location" to "service_role";

grant insert on table "public"."property_location" to "service_role";

grant references on table "public"."property_location" to "service_role";

grant select on table "public"."property_location" to "service_role";

grant trigger on table "public"."property_location" to "service_role";

grant truncate on table "public"."property_location" to "service_role";

grant update on table "public"."property_location" to "service_role";

grant delete on table "public"."property_types" to "anon";

grant insert on table "public"."property_types" to "anon";

grant references on table "public"."property_types" to "anon";

grant select on table "public"."property_types" to "anon";

grant trigger on table "public"."property_types" to "anon";

grant truncate on table "public"."property_types" to "anon";

grant update on table "public"."property_types" to "anon";

grant delete on table "public"."property_types" to "authenticated";

grant insert on table "public"."property_types" to "authenticated";

grant references on table "public"."property_types" to "authenticated";

grant select on table "public"."property_types" to "authenticated";

grant trigger on table "public"."property_types" to "authenticated";

grant truncate on table "public"."property_types" to "authenticated";

grant update on table "public"."property_types" to "authenticated";

grant delete on table "public"."property_types" to "service_role";

grant insert on table "public"."property_types" to "service_role";

grant references on table "public"."property_types" to "service_role";

grant select on table "public"."property_types" to "service_role";

grant trigger on table "public"."property_types" to "service_role";

grant truncate on table "public"."property_types" to "service_role";

grant update on table "public"."property_types" to "service_role";

grant delete on table "public"."property_views" to "anon";

grant insert on table "public"."property_views" to "anon";

grant references on table "public"."property_views" to "anon";

grant select on table "public"."property_views" to "anon";

grant trigger on table "public"."property_views" to "anon";

grant truncate on table "public"."property_views" to "anon";

grant update on table "public"."property_views" to "anon";

grant delete on table "public"."property_views" to "authenticated";

grant insert on table "public"."property_views" to "authenticated";

grant references on table "public"."property_views" to "authenticated";

grant select on table "public"."property_views" to "authenticated";

grant trigger on table "public"."property_views" to "authenticated";

grant truncate on table "public"."property_views" to "authenticated";

grant update on table "public"."property_views" to "authenticated";

grant delete on table "public"."property_views" to "service_role";

grant insert on table "public"."property_views" to "service_role";

grant references on table "public"."property_views" to "service_role";

grant select on table "public"."property_views" to "service_role";

grant trigger on table "public"."property_views" to "service_role";

grant truncate on table "public"."property_views" to "service_role";

grant update on table "public"."property_views" to "service_role";

grant delete on table "public"."user_chats" to "anon";

grant insert on table "public"."user_chats" to "anon";

grant references on table "public"."user_chats" to "anon";

grant select on table "public"."user_chats" to "anon";

grant trigger on table "public"."user_chats" to "anon";

grant truncate on table "public"."user_chats" to "anon";

grant update on table "public"."user_chats" to "anon";

grant delete on table "public"."user_chats" to "authenticated";

grant insert on table "public"."user_chats" to "authenticated";

grant references on table "public"."user_chats" to "authenticated";

grant select on table "public"."user_chats" to "authenticated";

grant trigger on table "public"."user_chats" to "authenticated";

grant truncate on table "public"."user_chats" to "authenticated";

grant update on table "public"."user_chats" to "authenticated";

grant delete on table "public"."user_chats" to "service_role";

grant insert on table "public"."user_chats" to "service_role";

grant references on table "public"."user_chats" to "service_role";

grant select on table "public"."user_chats" to "service_role";

grant trigger on table "public"."user_chats" to "service_role";

grant truncate on table "public"."user_chats" to "service_role";

grant update on table "public"."user_chats" to "service_role";

grant delete on table "public"."videos" to "anon";

grant insert on table "public"."videos" to "anon";

grant references on table "public"."videos" to "anon";

grant select on table "public"."videos" to "anon";

grant trigger on table "public"."videos" to "anon";

grant truncate on table "public"."videos" to "anon";

grant update on table "public"."videos" to "anon";

grant delete on table "public"."videos" to "authenticated";

grant insert on table "public"."videos" to "authenticated";

grant references on table "public"."videos" to "authenticated";

grant select on table "public"."videos" to "authenticated";

grant trigger on table "public"."videos" to "authenticated";

grant truncate on table "public"."videos" to "authenticated";

grant update on table "public"."videos" to "authenticated";

grant delete on table "public"."videos" to "service_role";

grant insert on table "public"."videos" to "service_role";

grant references on table "public"."videos" to "service_role";

grant select on table "public"."videos" to "service_role";

grant trigger on table "public"."videos" to "service_role";

grant truncate on table "public"."videos" to "service_role";

grant update on table "public"."videos" to "service_role";

create policy "Enable insert for authenticated users only"
on "public"."agent_applications"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."agent_applications"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."amenities"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."chats"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."chats"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."cities"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."communities"
as permissive
for select
to public
using (true);


create policy "Enable delete for users based on user_id"
on "public"."favourites"
as permissive
for delete
to public
using ((auth.uid() = user_id));


create policy "Enable insert for authenticated users only"
on "public"."favourites"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."favourites"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."lease_durations"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."listing_types"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."messages"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."messages"
as permissive
for select
to public
using (true);


create policy "update access to all authenticated users"
on "public"."messages"
as permissive
for update
to authenticated
using (true)
with check (true);


create policy "Enable insert for authenticated users only"
on "public"."notifications"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."notifications"
as permissive
for select
to public
using (true);


create policy "Public profiles are viewable by everyone."
on "public"."profiles"
as permissive
for select
to public
using (true);


create policy "User can see own profile"
on "public"."profiles"
as permissive
for select
to authenticated
using ((auth.uid() = id));


create policy "Users can insert their own profile."
on "public"."profiles"
as permissive
for insert
to public
with check ((auth.uid() = id));


create policy "Users can update own profile."
on "public"."profiles"
as permissive
for update
to public
using ((auth.uid() = id));


create policy "Enable delete for users based on user_id"
on "public"."properties"
as permissive
for delete
to public
using ((auth.uid() = user_id));


create policy "Enable insert for authenticated users only"
on "public"."properties"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."properties"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."property_types"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."user_chats"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."user_chats"
as permissive
for select
to public
using (true);


create policy "nnn"
on "public"."user_chats"
as permissive
for update
to authenticated
using (true)
with check (true);


create policy "Enable insert for authenticated users only"
on "public"."videos"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."videos"
as permissive
for select
to public
using (true);


CREATE TRIGGER push_notification AFTER INSERT ON public.notifications FOR EACH ROW EXECUTE FUNCTION supabase_functions.http_request('https://olyqwduovxprfhgeastn.supabase.co/functions/v1/push', 'POST', '{"Content-type":"application/json"}', '{}', '1000');


